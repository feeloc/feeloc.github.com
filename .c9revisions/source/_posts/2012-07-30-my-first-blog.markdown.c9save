{"ts":1384268234952,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"---\nlayout: post\ntitle: \"开始使用Octopress写博客\"\ndate: 2012-07-30 13:10\ncomments: true\ncategories: octopress github 环境搭建\n---\n{% img http://feeloc.cn/downloads/images/1.jpg %}\n>多么渴求知识的喵星人啊，最近看了Octopress配合GitHub搭建个人博客的文章，觉得正是我想要的那种非常简约的博客风格，不仅是样式简约大气，\n>写作方式也非常舒服，markdown方式让人写技术文章也能像码字写小说一样舒服。\n<!-- more -->\n下面记录下我配置博客的全部过程\n\n##一、环境搭建##\n*\tpython环境\n\t*\tOctopress 使用 Python 编写的代码加亮系统`pygments`，需要安装 [python](http://www.python.org/getit/ \"下载python相应版本\")\n*\truby环境\n\t*\tOctopress 是 ruby 应用程序，需要安装 [ruby 1.9.2](http://rubyforge.org/frs/download.php/75127/rubyinstaller-1.9.2-p290.exe \"下载ruby相应版本\")\n\t*\t安装后设置ruby的bin目录在环境变量path中\n\t*\t设置gem更新源\n\t\t*\t`gem sources --remove http://rubygems.org/`\n\t\t*\t`gem sources -a http://ruby.taobao.org/`\n\t\t*\t`gem sources -l # 请确保只有 http://ruby.taobao.org 一行输出`\n\t*\t安装rdoc和bundler\n\t\t*\t`gem install rdoc bundler`\n*\truby 的模块工具 gem 在生成本地模块时需要用到编译环境\n\t*\t下载 [DevKit](https://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe \"下载编译环境\")\n\t*\t安装DevKit\n\t\t*\t将 DevKit 自解压包释放到 `D:\\DevKit`\n\t\t*\t在 cmd 窗口中执行 `ruby dk.rb init`\n\t\t*\t在 cmd 窗口中执行 `ruby dk.rb install`\n\n##二、设置环境变量##\n*\t在 Windows 的 “高级系统设置” 中设置两个环境变量\n\t*\t设置 `LANG` 和 `LC_ALL` 两个环境变量，其值均设置为 `zh_CN.UTF-8`\n\t*\t在 CMD 窗口中测试： `echo %LANG% %LC_ALL%`\n\n##三、安装 Octopress##\n{% codeblock %}\n#1. 克隆 Octopress\n$ cd d:\n$ git clone git://github.com/imathis/octopress.git sinosmond.github.com myblog\n$ cd myblog\n#2. 修改 Octopress 的 GEM 源\n$ vi Gemfile 或 notepad Gemfile\n将行 ： source \"http://rubygems.org/\"\n改为 ： source \"http://ruby.taobao.org/\"\n#3. 安装 Octopress 所需的GEM组件\n$ bundle install\n#4. 生成Octopress 的模版文件\nbundle update    #防止出现rake aborted!最好每次修改完Gemfile都更新下\nrake install\n{% endcodeblock %}\n\n##四、安装Git，并用git管理github\n*\t创建 github 账号和仓库\n\t*\t下面的操作假定您注册了 `<USERNAME>` 的账号\n\t*\t下面的操作假定您创建了 `<USERNAME>.github.com` 的仓库   _注意：一定是`<USERNAME>.github.com`_的仓库，这样才能在master分支\n*\t安装git\n\t*\t安装git的过程很简单，下面三个图显示了需要注意的地方\n\t{% img http://feeloc.cn/downloads/images/2012-07-30/1.png 500 '选Simple context menu (Registry based)' %}\n\t{% img http://feeloc.cn/downloads/images/2012-07-30/2.png 500 '选择第二项' %}\n\t{% img http://feeloc.cn/downloads/images/2012-07-30/3.png 500 '选择第三项' %}\n*\t导入SSH KEY进github\n\t*\t输入github的用户名，邮箱，生成key\n\t{% img http://feeloc.cn/downloads/images/2012-07-30/4.png 500 '生成KEY' %}\n\t*\t将生成的key导入到github的SSH KEYS\n\t{% img http://feeloc.cn/downloads/images/2012-07-30/5.png 500 '导入KEY' %}\n\n##五、配置和使用 Octopress##\n*\t编辑`_config.yml`文件，保存为UTF-8格式\n{% codeblock %}\nurl:                # For rewriting urls for RSS, etc\ntitle:              # Used in the header and title tags\nsubtitle:           # A description used in the header\nauthor:             # Your name, for RSS, Copyright, Metadata\nsimple_search:      # Search engine for simple site search\ndescription:        # A default meta description for your site\nsubscribe_rss:      # Url for your blog's feed, defauts to /atom.xml\nsubscribe_email:    # Url to subscribe by email (service required)\nemail:              # Email address for the RSS feed if you want it.\n{% endcodeblock %}\n*\t生成新的markdown页面\n\t*\t`rake new_post[\"article name\"]`  #生成指定的 Blog页面\n\t*\t`rake new_page[\"page name\"]`\t#生成指定的静态页面\n*\t编辑博客内容\n\t*\t根据markdown语法，自由编辑页面吧\n\n##六、首次提交到Github##\n*\t`rake setup_github_pages`\t#输入仓库的SSH地址，即git@github.com:`<USERNAME>`/`<USERNAME>`.github.com.git\n*\t`rake generate`\t#生成静态文件\n*\t`rake preview`\t#本地4000商品预览\n*\t`rake deploy`\t#发布到github\n\n>如果没出错，现在访问`<USERNAME>`.github.com，应该可以看到你的博客了，尽情积累自己的一切吧！！\n\t\n\t\n"]],"start1":0,"start2":0,"length1":0,"length2":3391}]],"length":3391}
{"contributors":[],"silentsave":false,"ts":1384268247638,"patch":[[{"diffs":[[0,"press写博客"],[1,"，自动部署的哦"],[0,"\"\ndate: "]],"start1":33,"start2":33,"length1":16,"length2":23}]],"length":3398,"saved":false}
